name: Performance Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'prod'
        type: choice
        options:
          - prod
          - qa
          - uat
      duration:
        description: 'Test duration in minutes'
        required: true
        default: '5'
        type: string
  schedule:
    # Performance tests weekly on Saturdays at 3:00 AM UTC
    - cron: '0 3 * * 6'

env:
  NODE_VERSION: '18'

jobs:
  performance-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run performance tests
        run: |
          ENV=${{ github.event.inputs.environment || 'prod' }} npx playwright test \
          --grep="@performance" \
          --project=chromium \
          --reporter=html \
          --timeout=300000
        env:
          CI: true
          PERF_DURATION: ${{ github.event.inputs.duration || '5' }}

      - name: Generate Lighthouse reports
        run: |
          npm install -g lighthouse
          mkdir -p lighthouse-reports
          
          # Get base URL from environment
          case "${{ github.event.inputs.environment || 'prod' }}" in
            "prod")
              BASE_URL="https://automationexercise.com"
              ;;
            "qa")
              BASE_URL="https://qa.automationexercise.com"
              ;;
            "uat")
              BASE_URL="https://uat.automationexercise.com"
              ;;
          esac
          
          # Run Lighthouse on key pages
          lighthouse $BASE_URL --output=html --output-path=lighthouse-reports/homepage.html --chrome-flags="--headless"
          lighthouse $BASE_URL/products --output=html --output-path=lighthouse-reports/products.html --chrome-flags="--headless" || true
          lighthouse $BASE_URL/login --output=html --output-path=lighthouse-reports/login.html --chrome-flags="--headless" || true

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results-${{ github.event.inputs.environment || 'prod' }}
          path: |
            playwright-report/
            lighthouse-reports/
            test-results/
          retention-days: 14

      - name: Analyze performance metrics
        run: |
          mkdir -p performance-analysis
          echo "# Performance Test Results - $(date)" > performance-analysis/summary.md
          echo "" >> performance-analysis/summary.md
          echo "## Environment: ${{ github.event.inputs.environment || 'prod' }}" >> performance-analysis/summary.md
          echo "## Duration: ${{ github.event.inputs.duration || '5' }} minutes" >> performance-analysis/summary.md
          echo "" >> performance-analysis/summary.md
          
          # Extract performance metrics from test results if available
          if [ -d "test-results" ]; then
            echo "## Test Results Summary" >> performance-analysis/summary.md
            find test-results -name "*.json" -exec echo "- {}" \; >> performance-analysis/summary.md
          fi
          
          # Add Lighthouse reports info
          if [ -d "lighthouse-reports" ]; then
            echo "" >> performance-analysis/summary.md
            echo "## Lighthouse Reports Generated" >> performance-analysis/summary.md
            ls lighthouse-reports/*.html | while read file; do
              echo "- $(basename $file)" >> performance-analysis/summary.md
            done
          fi

      - name: Upload performance analysis
        uses: actions/upload-artifact@v4
        with:
          name: performance-analysis-${{ github.event.inputs.environment || 'prod' }}
          path: performance-analysis/
          retention-days: 30
